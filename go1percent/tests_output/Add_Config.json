{"report":{"reportPrefix":"","assertionsCount":9,"lastError":null,"skippedAtRuntime":[],"skippedByUser":[],"skipped":[],"time":"0.9100","timeMs":910,"completed":{"POST api test":{"time":"0.2150","assertions":[{"name":"NightwatchAssertError","message":"Passed [ok]: .post('/contribution/addContribution').expect(200) ok","stackTrace":"","fullMsg":"Passed [ok]: .post('/contribution/addContribution').expect(200) ok","failure":false},{"name":"NightwatchAssertError","message":"Expected true  to be equal(true): ","stackTrace":"","fullMsg":"Expected true  to be equal(true): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 'Successfully added contribution!'  to be equal('Successfully added contribution!'): ","stackTrace":"","fullMsg":"Expected 'Successfully added contribution!'  to be equal('Successfully added contribution!'): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 208  to be lessThan(2000): ","stackTrace":"","fullMsg":"Expected 208  to be lessThan(2000): ","failure":false}],"commands":[],"passed":4,"errors":0,"failed":0,"skipped":0,"tests":4,"status":"pass","startTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT","httpOutput":[],"steps":[],"stackTrace":"","testcases":{"POST api test":{"time":"0.2150","assertions":[{"name":"NightwatchAssertError","message":"Passed [ok]: .post('/contribution/addContribution').expect(200) ok","stackTrace":"","fullMsg":"Passed [ok]: .post('/contribution/addContribution').expect(200) ok","failure":false},{"name":"NightwatchAssertError","message":"Expected true  to be equal(true): ","stackTrace":"","fullMsg":"Expected true  to be equal(true): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 'Successfully added contribution!'  to be equal('Successfully added contribution!'): ","stackTrace":"","fullMsg":"Expected 'Successfully added contribution!'  to be equal('Successfully added contribution!'): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 208  to be lessThan(2000): ","stackTrace":"","fullMsg":"Expected 208  to be lessThan(2000): ","failure":false}],"tests":4,"commands":[],"passed":4,"errors":0,"failed":0,"skipped":0,"status":"pass","startTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT","httpOutput":[],"steps":[],"stackTrace":"","timeMs":215,"endTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT"}},"timeMs":215,"endTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT"},"GET api test":{"time":"0.2390","assertions":[{"name":"NightwatchAssertError","message":"Passed [ok]: .get('/contribution/getKnolderContribution?pageNumber=1&limit=10000').expect(200) ok","stackTrace":"","fullMsg":"Passed [ok]: .get('/contribution/getKnolderContribution?pageNumber=1&limit=10000').expect(200) ok","failure":false},{"name":"NightwatchAssertError","message":"Expected true  to be equal(true): ","stackTrace":"","fullMsg":"Expected true  to be equal(true): ","failure":false},{"name":"NightwatchAssertError","message":"Expected [ …(51) ]  to have that not equals(+0): ","stackTrace":"","fullMsg":"Expected [ …(51) ]  to have that not equals(+0): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 51  to have that not equals(+0): ","stackTrace":"","fullMsg":"Expected 51  to have that not equals(+0): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 232  to be lessThan(2000): ","stackTrace":"","fullMsg":"Expected 232  to be lessThan(2000): ","failure":false}],"commands":[],"passed":5,"errors":0,"failed":0,"skipped":0,"tests":5,"status":"pass","startTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT","httpOutput":[],"steps":[],"stackTrace":"","testcases":{"POST api test":{"time":"0.2150","assertions":[{"name":"NightwatchAssertError","message":"Passed [ok]: .post('/contribution/addContribution').expect(200) ok","stackTrace":"","fullMsg":"Passed [ok]: .post('/contribution/addContribution').expect(200) ok","failure":false},{"name":"NightwatchAssertError","message":"Expected true  to be equal(true): ","stackTrace":"","fullMsg":"Expected true  to be equal(true): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 'Successfully added contribution!'  to be equal('Successfully added contribution!'): ","stackTrace":"","fullMsg":"Expected 'Successfully added contribution!'  to be equal('Successfully added contribution!'): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 208  to be lessThan(2000): ","stackTrace":"","fullMsg":"Expected 208  to be lessThan(2000): ","failure":false}],"tests":4,"commands":[],"passed":4,"errors":0,"failed":0,"skipped":0,"status":"pass","startTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT","httpOutput":[],"steps":[],"stackTrace":"","timeMs":215,"endTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT"},"GET api test":{"time":"0.2390","assertions":[{"name":"NightwatchAssertError","message":"Passed [ok]: .get('/contribution/getKnolderContribution?pageNumber=1&limit=10000').expect(200) ok","stackTrace":"","fullMsg":"Passed [ok]: .get('/contribution/getKnolderContribution?pageNumber=1&limit=10000').expect(200) ok","failure":false},{"name":"NightwatchAssertError","message":"Expected true  to be equal(true): ","stackTrace":"","fullMsg":"Expected true  to be equal(true): ","failure":false},{"name":"NightwatchAssertError","message":"Expected [ …(51) ]  to have that not equals(+0): ","stackTrace":"","fullMsg":"Expected [ …(51) ]  to have that not equals(+0): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 51  to have that not equals(+0): ","stackTrace":"","fullMsg":"Expected 51  to have that not equals(+0): ","failure":false},{"name":"NightwatchAssertError","message":"Expected 232  to be lessThan(2000): ","stackTrace":"","fullMsg":"Expected 232  to be lessThan(2000): ","failure":false}],"tests":5,"commands":[],"passed":5,"errors":0,"failed":0,"skipped":0,"status":"pass","startTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT","httpOutput":[],"steps":[],"stackTrace":"","timeMs":239,"endTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT"}},"timeMs":239,"endTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT"}},"completedSections":{"__global_beforeEach_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429327,"httpOutput":[],"timeMs":0,"endTimestamp":1698228429327},"__before_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429328,"httpOutput":[],"timeMs":0,"endTimestamp":1698228429328},"POST api test":{"time":"0.2150","assertions":[],"commands":[{"name":"assert.ok","args":[],"startTime":1698228429539,"endTime":1698228429540,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.equal(true)","args":[],"startTime":1698228429541,"endTime":1698228429542,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.equal('Successfully added contribution!')","args":[],"startTime":1698228429542,"endTime":1698228429542,"elapsedTime":0,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.lessThan(2000)","args":[],"startTime":1698228429542,"endTime":1698228429543,"elapsedTime":1,"status":"pass","result":{}}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429328,"httpOutput":[],"beforeEach":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429328,"httpOutput":[],"endTimestamp":1698228429328,"timeMs":0},"testcase":{"time":"0.2090","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429328,"httpOutput":[],"endTimestamp":1698228429537,"timeMs":209},"afterEach":{"time":"0.006000","assertions":[],"commands":[{"name":"assert.ok","args":[],"startTime":1698228429539,"endTime":1698228429540,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.equal(true)","args":[],"startTime":1698228429541,"endTime":1698228429542,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.equal('Successfully added contribution!')","args":[],"startTime":1698228429542,"endTime":1698228429542,"elapsedTime":0,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.lessThan(2000)","args":[],"startTime":1698228429542,"endTime":1698228429543,"elapsedTime":1,"status":"pass","result":{}}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429537,"httpOutput":[],"endTimestamp":1698228429543,"timeMs":6},"timeMs":215,"endTimestamp":1698228429543},"GET api test":{"time":"0.2400","assertions":[],"commands":[{"name":"assert.ok","args":[],"startTime":1698228429780,"endTime":1698228429781,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.equal(true)","args":[],"startTime":1698228429781,"endTime":1698228429781,"elapsedTime":0,"status":"pass","result":{}},{"name":"expect(<value>)..to.have.that.not.equals(+0)","args":[],"startTime":1698228429781,"endTime":1698228429782,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.have.that.not.equals(+0)","args":[],"startTime":1698228429782,"endTime":1698228429782,"elapsedTime":0,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.lessThan(2000)","args":[],"startTime":1698228429782,"endTime":1698228429783,"elapsedTime":1,"status":"pass","result":{}}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429544,"httpOutput":[],"beforeEach":{"time":"0.001000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429544,"httpOutput":[],"endTimestamp":1698228429545,"timeMs":1},"testcase":{"time":"0.2330","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429545,"httpOutput":[],"endTimestamp":1698228429778,"timeMs":233},"afterEach":{"time":"0.005000","assertions":[],"commands":[{"name":"assert.ok","args":[],"startTime":1698228429780,"endTime":1698228429781,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.equal(true)","args":[],"startTime":1698228429781,"endTime":1698228429781,"elapsedTime":0,"status":"pass","result":{}},{"name":"expect(<value>)..to.have.that.not.equals(+0)","args":[],"startTime":1698228429781,"endTime":1698228429782,"elapsedTime":1,"status":"pass","result":{}},{"name":"expect(<value>)..to.have.that.not.equals(+0)","args":[],"startTime":1698228429782,"endTime":1698228429782,"elapsedTime":0,"status":"pass","result":{}},{"name":"expect(<value>)..to.be.lessThan(2000)","args":[],"startTime":1698228429782,"endTime":1698228429783,"elapsedTime":1,"status":"pass","result":{}}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429778,"httpOutput":[],"endTimestamp":1698228429783,"timeMs":5},"timeMs":240,"endTimestamp":1698228429784},"__after_hook":{"time":"0.001000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429785,"httpOutput":[],"timeMs":1,"endTimestamp":1698228429786},"__global_afterEach_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1698228429787,"httpOutput":[],"timeMs":0,"endTimestamp":1698228429787}},"errmessages":[],"testsCount":2,"skippedCount":0,"failedCount":0,"errorsCount":0,"passedCount":9,"group":"","modulePath":"/home/knoldus/Jyoti/Sprint1/go1percent/test/Add_Config.js","startTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT","endTimestamp":"Wed, 25 Oct 2023 10:07:09 GMT","sessionCapabilities":{"browserName":"chrome","name":"api testing"},"sessionId":"","projectName":"","buildName":"","testEnv":"api_testing","isMobile":false,"status":"pass","host":"localhost","name":"api testing","tags":[],"tests":2,"failures":0,"errors":0,"httpOutput":[],"rawHttpOutput":[]},"name":"Add_Config","httpOutput":[],"systemerr":""}